-----------------------------------------------------------
    Background
-----------------------------------------------------------
- 1975
- inventors of list processing
- demonstrating mechanisms can solve interesting problems
	- heuristic programming
	- means-ends analysis
- empirical inquiry
	- symbolic system
	- heuristic search

-----------------------------------------------------------
    Symbols
-----------------------------------------------------------
- empirically derived
- requirement for intelligence is to be able to store and manipulate symbols
- qualitative laws are important
	- frames theory and thoughts
- physical symbol system
	- obeys laws of physics
	- set of entities called symbols
		- components of another type of entity called an expression
			- expression is aka symbol structure
			- composed of a number of instances of symbols in some relation
- designation:
	- whether an expression designates an object
	- if with the expression the system can either:
		- affect the object 
		- behave dependent on the object
- interpretation:
	- whether an expression can be interpreted
	- if the expression designates a process and given the expression the system can carry out the process
- hypothesis of a law of qualitative structure for symbol systems
	!having means for general intelligent action <-> physical symbol system

-----------------------------------------------------------
    Symbol development history
-----------------------------------------------------------
- turing machines
	- several independent, equivalent notions were developed
	- development in the 30's
	- accomplished half the principle of interpretation
		- machine could run from a description
			- automatic formal symbol manipulation
- stored program
	- mid 40's
	- programs are now data
		- implicit in the turing machine model
	- accomplished second half of the principle of interpretation
		- system's own data can be interpreted
- list processing
	- 1956
	- contents of data structures became symbols
		- patterns that designated and had referents
	- lists held addresses
		- allowed access to other lists
			- list structures
	- 3 developments
		1. dynamic memory structure
			- operations for building and modifying structure
		2. abstraction of data types
		3. model of designation
- LISP
	- 1959-1960
	- abstracting list structures out of concrete machines

-----------------------------------------------------------
    Hypothesis evidence
-----------------------------------------------------------
- hypothesis is an empirical generalization and not a theorem
	- no logical proof
	- only provide supporting evidence
- proposition that CS is a field of empirical inquiry
- sufficiency
	- attempts to construct and test specific physical symbol systems for capacity for intelligence
	- #artificial intelligence#
- necessity
	- whether specific intelligent systems can be explained as the working of a physical symbol system
		- humans
	- #cognitive psychology#

-----------------------------------------------------------
    Constructing Intelligent Systems
-----------------------------------------------------------
- paradigm similar to testing germ theory
	1. identify a task domain needing intelligence
	2. construct a program for a digital computer to handle tasks in this domain
- start with easy and well-structured tasks
	- puzzles and games
	- scheduling and allocation
	- simple induction
- slow and steady progress
	- increasing competency in each domain
	- expanding the number of domains
- additional efforts in generalizing programs
	- separate out general problem solving from particular task domains
		- general problem solver (GPS)
	- generalized representation for goals and plans

-----------------------------------------------------------
    Modeling Human Symbolic Behaviour
-----------------------------------------------------------
- information processing psychology
	- 2 main kinds of activities
		1. observations and experiments on human behaviour in tasks requiring intelligence
		2. programming symbol systems to model observed human behaviour
	- activities demonstrate the empirical nature of computer science

-----------------------------------------------------------
    Heuristic Search
-----------------------------------------------------------
- another law of qualitative structure
	!physical symbol systems solve problems through heuristic search!
		- solutions to problems are represented as symbol structures
		- physical symbol system generate and modify symbol structures until it produces a solution structure
	- again only empirical evidence
- heuristic required due to practical limitations
- consider system processing one thing at a time

-----------------------------------------------------------
    Problems
-----------------------------------------------------------
- a problem is
	1. a test for a class of symbol structures
		- know what we want to do
	2. a generator of symbol structures
		- don't know how to immediately produce a solution
- being able to test solutions doesn't mean we can create a generator constructing solutions
	eg. knowing winning in chess is a checkmate position doesn't mean we have a generator for putting us in those situations
- before a generator, there must be a #problem space#
	- space of symbol structures
		- able to represent problem situations
		- including start and goal
- move generators are processes mapping one element in the problem space to another
- intelligence would be ordering solutions generation such that actual solutions appear earlier